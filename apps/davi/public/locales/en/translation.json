{
  "dao": {
    "dao": "DAO",
    "daos": "DAOs",
    "guild": "Guild",
    "guilds": "Guilds",
    "create": "Create DAO"
  },
  "projectDavi": {
    "projectDavi": "Project-DAVI"
  },
  "governance": "Governance",
  "language": {
    "language": "Language",
    "languages": "Languages"
  },
  "connections": {
    "switchWalletTo": "Switch Wallet to {{chainName}}",
    "connectWallet": "Connect Wallet",
    "notConnected": "Not Connected",
    "switchNetworkTo": "Switch network to {{chainName}}",
    "disconnect": "Disconnect",
    "installMetamask": "Install Metamask",
    "unsupportedNetwork": "Unsupported Network",
    "switchNetwork": "Switch Network",
    "errorConnecting": "Error connecting",
    "pleaseSwitchNetwork": "You're currently connected to an unsupported network. Please switch to a supported network to continue.",
    "account": "Account",
    "connectToAWallet": "Connect to a wallet",
    "connectedTo": "Connected to {{walletName}}",
    "change": "Change",
    "copiedAddress": "Copied Address",
    "copyAddress": "Copy Address",
    "changeConnection": "Change Connection",
    "connectTheWalletToProceed": "Connect the wallet to proceed"
  },
  "transactions": {
    "waitingForConfirmation": "Waiting For Confirmation",
    "confirmThisTransactionInYourWallet": "Confirm this Transaction in your Wallet",
    "transactionSubmitted": "Transaction Submitted",
    "viewOnBlockExplorer": "View on Block Explorer",
    "transactionRejected": "Transaction Rejected",
    "yourTransactionsWillAppearHere": "Your transactions will appear here...",
    "recentTransactions": "Recent Transactions",
    "clearAll": "Clear All"
  },
  "modals": {
    "cancel": "Cancel",
    "dismiss": "Dismiss",
    "close": "Close"
  },
  "proposals": {
    "proposals": "Proposals",
    "proposals_zero": "No proposals",
    "proposals_one": "{{count}} proposal",
    "proposals_other": "{{count}} proposals",
    "allProposals": "All proposals",
    "noActiveProposalsMessage": "There are no active proposals",
    "goToAllProposalsPage": "Go to all proposals page"
  },
  "treasury": {
    "treasury": "Treasury",
    "assets": "assets",
    "asset": "asset",
    "tokenAmount": "Token Amount",
    "errorLoadingTreasuries": "Error loading treasuries",
    "noTreasuryAssets": "No treasury assets available"
  },
  "actionBuilder": {
    "action": {
      "actions_one": "Action",
      "actions_other": "Actions",
      "addAction": "Add Action",
      "saveAction": "Save Action",
      "onChainActions_zero": "No on-chain action",
      "onChainActions_one": "{{count}} on-chain action",
      "onChainActions_other": "{{count}} on-chain actions",
      "unknownAction": "Unknown Action",
      "onchainAction": "On-chain Action",
      "noOnchainAction": "No on-chain action",
      "confirmRemoval": "Confirm Removal",
      "areYouSureYouWantToRemoveAction": "Are you sure you want to remove this action?",
      "theRemovalCannotBeReverted": "The removal cannot be reverted",
      "removeAction": "Remove Action",
      "remove": "Remove",
      "edit": "Edit"
    },
    "options": {
      "against": "Against",
      "for": "For",
      "addOption": "Add Option",
      "editOption": "Edit Option",
      "deleteOption": "Delete Option",
      "optionLabel": "Option Label",
      "option": "Option {{optionKey}}",
      "options": "Options"
    },
    "inputs": {
      "amount": "Amount",
      "inWei": "Value in wei",
      "asset": "Asset",
      "token": "Token",
      "tokenAmount": "Token Amount",
      "recipient": "Recipient",
      "ethereumAddress": "Ethereum Address",
      "toAddress": "To Address",
      "address": "Address",
      "contract": "Contract"
    },
    "permissions": {
      "permissions": "Permissions",
      "anyAddress": "Any Address",
      "maxValue": "Max Value",
      "setPermissions": "Set Permissions",
      "setPermissionsFor": "Set permissions for",
      "setApprovalPermissionsFor": "Set approval permissions for",
      "setTransferPermissionsFor": "Set transfer permissions for",
      "permissionDenied": "Permission denied",
      "permissionDeniedMessage": "The DAO does not have permission to perform this action",
      "warningMessage": "Warning",
      "proposalNotExecuted": "This proposal can't be executed. Are you sure you want to continue?",
      "function": "Function",
      "functionName": "Function Name",
      "functionSignature": "Function Signature",
      "assetTransfer": "Asset Transfer",
      "functionCall": "Function Call",
      "functionCalls": "Function Calls",
      "noPermissionsSet": "No permissions set",
      "dataNotAvailable": "Permissions data not available",
      "allowedAmount": "Allowed amount"
    },
    "transfer": {
      "transfer": "Transfer",
      "unknownToken": "Unknown token"
    },
    "repMint": {
      "mint": "Mint",
      "mintRep": "Mint REP",
      "recipient": "Recipient",
      "recipientTooltip": "The address that will receive the REP minted.",
      "repPercent": "Reputation in %",
      "repPercentTooltip": "The percentage of the total reputation supply that will be minted.",
      "repAmount": "Reputation Amount",
      "repAmountTooltip": "The amount of REP that will be minted."
    },
    "ens": {
      "updateContentCoreAction": "Update ENS Content",
      "nameTooltip": "The name of the ENS name that will be registered.",
      "ipfsHashToolTip": "The IPFS hash that will be set",
      "domain": "Domain",
      "currentContent": "Current content",
      "newContent": "New content",
      "updateContent": "ENS: Update Content",
      "name": "ENS Name",
      "ipfsHash": "CID/IPFS Hash",
      "none": "None",
      "expandLinesOfCode": "Expand {{numLines}} lines of code",
      "validation": {
        "nameCannotBeEmpty": "Name cannot be empty",
        "domainNameInvalidLength": "Domain names have invalid length",
        "domainNameCannotIncludeSpaces": "Domain name cannot include spaces",
        "domainCannotBeMoreThanThreeLevels": "Domain cannot be more than three levels deep (subdomain.domain.eth)",
        "ipfsHashNotValid": "IPFS hash not valid",
        "onlyCidV0Supported": "Only CID v0 is supported"
      }
    },
    "approval": {
      "approve": "Approve",
      "spender": "spender",
      "selectTokensToSpend": "Select tokens to spend",
      "approveSpendingCall": "Approve spending call",
      "addressToWhichTheExpenseIsBeingAuthorized": "Address to which the expense is being authorized",
      "amountBeingApproved": "Amount being approved",
      "approveTokenSpending": "Approve {{tokenSymbol}} token spending"
    },
    "config": {
      "setGuildConfig": "Set Guild Config",
      "noValueHasBeenUpdatedFromCurrentGuildConfig": "No value has been updated from current guild config",
      "proposalTimeHasToBeMoreThanZero": "Proposal time has to be more than 0",
      "lockTimeHasToBeHigherOrEqualToProposalTime": "Lock time has to be higher or equal to proposal time",
      "proposalTimeHasToBeLowerOrEqualToLockTime": "Proposal time has to be lower than or equal to the Lock time",
      "votingPowerPercentageForProposalExecutionHasToBeMoreThanZero": "Voting power percentage for execution has to be more than 0",
      "voteGasHasToBeEqualOrLowerThan117000": "vote gas has to be equal or lower than 117000"
    },
    "advanced": {
      "advancedOptions": "Advanced options",
      "rawTransaction": "Raw transaction",
      "value": "Value",
      "data": "Data",
      "advancedView": "Advanced view"
    },
    "simulations": {
      "simulateTransactions": "Simulate transactions",
      "simulationFailed": "Simulation failed",
      "actionsVerified": "Actions verified",
      "actionsFailed": "Action verifications failed",
      "verifyingActions": "Verifying actions",
      "error": "Error while simulating transactions",
      "poweredBy": "powered by"
    },
    "save": "Save",
    "core": "Core",
    "externalContracts": "External Contracts",
    "decode": "Decode",
    "interactWith": "Interact with",
    "default": "Default",
    "pickSwaprPair": "Pick Swapr pair",
    "displayRawData": "Display Raw Data",
    "displayFormattedData": "Display Formatted Data"
  },
  "voting": {
    "castVote": "Cast your vote",
    "voteResults": "Vote Results",
    "vote": "Vote",
    "confirmVote": "Confirm Vote",
    "voteQuestion": "Are you sure you want to vote {{action}}?",
    "noRevertAction": "This action cannot be reverted",
    "votingPower": "Voting Power",
    "voteImpact": "Vote Impact",
    "voteOnProposal": "Vote on proposal",
    "youVotedForOption": "You voted for option \"{{optionLabel}}\" with {{amount}}"
  },
  "proposal": {
    "actions": {
      "execute": "Execute",
      "executeProposal": "Execute proposal"
    },
    "information": "Information",
    "consensusSystem": "Consensus System",
    "proposalDuration": "Proposal Duration",
    "quorum": "Quorum",
    "backToOverview": "Back to Overview",
    "backToDiscussion": "Back to Discussion",
    "seeAllProposals": "See all proposals",
    "createdBy": "Created by",
    "proposalInfoCard": {
      "consensusSystem": "Consensus System",
      "proposalDuration": "Proposal Duration",
      "proposalHistory": "Proposal History"
    },
    "time": {
      "expiredTimeAgo": "expired {{timeDifferenceHumanized}} ago",
      "expiresInTimeDetail": "expires in {{timeDifferenceHumanized}}",
      "endingTimeLeft": "{{timeDifferenceHumanized}} left",
      "endedTimeAgo": "ended {{timeDifferenceHumanized}} ago",
      "aFewSeconds": "a few seconds"
    },
    "errors": {
      "proposalDescriptionError": "We ran into an error while trying to load the proposal content. Please refresh the page and try again.",
      "invalidContentHash": "Invalid content hash",
      "titleRequired": "Title is required",
      "atLeastOneOptionRequired": "At least one option is required",
      "atLeastOneActionPerOptionRequired": "At least one action per option is required",
      "optionsArrayIsEmpty": "Options array is empty",
      "metadataUploadError": "Metadata upload error",
      "genericProposalError": "We ran into an error."
    }
  },
  "tokenPicker": {
    "selectAToken": "Select a token",
    "searchToken": "Search token"
  },
  "duration": {
    "selectDuration": "Select duration",
    "durationWarningMessage": "Please change {{value}} input for the {{timeColumn}} column as it is over the limit. The maximum value allowed is {{limit.max}}.",
    "seconds_one": "second",
    "seconds_other": "seconds",
    "minutes_one": "minute",
    "minutes_other": "minutes",
    "mins": "mins",
    "hours_one": "hour",
    "hours_other": "hours",
    "days_one": "day",
    "days_other": "days",
    "months_one": "month",
    "months_other": "months",
    "years_one": "year",
    "years_other": "years"
  },
  "members": {
    "membership": "Membership",
    "members": "Members",
    "members_zero": "No Members",
    "members_one": "{{count}} Member",
    "members_other": "{{count}} Members",
    "member": "Member",
    "searchMemberOrAddress": "Search member or address",
    "noMembers": "This DAO has no members",
    "membersNotAvailable": "Member data is not available",
    "join": "Join",
    "yourVotingPower": "Your Voting Power",
    "increaseVotingPower": "Increase Voting Power",
    "locking": {
      "locked": "Locked",
      "unlocked": "Unlocked",
      "unlockedIn": "Unlocked in",
      "staked": "Staked",
      "withdraw": "Withdraw",
      "balance": "Balance",
      "unlockDate": "Unlock Date",
      "spending": "Spending",
      "max": "Max",
      "stakeTokens": "Stake {{token}} tokens",
      "lockingTokens": "Locking{{amount}} {{symbol}} tokens",
      "unlockAndWithdrawTokens": "Unlock and withdraw{{amount}} {{symbol}} tokens"
    }
  },
  "settings": {
    "settings": "Settings"
  },
  "filter": {
    "filter": "Filter",
    "search": "Search",
    "searchTitleEnsAddress": "Search proposal",
    "state": "State",
    "reset": "Reset",
    "type": "Type",
    "currency": "Token"
  },
  "createProposal": {
    "createProposal": "Create Proposal",
    "title": "Title",
    "enterProposalDescription": "Enter proposal body",
    "ipfs": {
      "failedToUpload": "Failed to upload to IPFS, please refresh the page and try again",
      "hashNotTheSame": "Hash returned by pinata isn't the same as local hash",
      "errorWhileUploading": "Error while uploading to IPFS",
      "couldntUploadToPinata": "Couldn't upload and pin to Pinata",
      "error": "Error"
    },
    "retry": "Retry",
    "createAnyway": "Create anyway"
  },
  "editDiscussion": {
    "editDiscussion": "Edit Discussion",
    "savingChanges": "Saving Changes"
  },
  "discussions": {
    "allDiscussions": "All discussions",
    "discussions_zero": "No Discussions",
    "discussions_one": "Discussion",
    "discussions_other": "Discussions",
    "thereAreNoDiscussions": "There are no discussions",
    "noMoreDiscussions": "There are no more discussions",
    "createDiscussion": "Create Discussion",
    "updateDiscussion": "Update Discussion",
    "createDiscussionWordy": "Create a new discussion",
    "discussionPlaceholder": "Write discussion content",
    "title": "Title",
    "postOptions": {
      "edit": "Edit",
      "delete": "Delete"
    },
    "postActions": {
      "reply": "Reply",
      "toggleThread": "Toggle thread",
      "like": "Like",
      "haha": "Haha",
      "downvote": "Downvote"
    },
    "activity": {
      "discussionTitle": "Activity",
      "discussionEmpty": "No comment yet",
      "discussionLoadMore": "Load more comments",
      "replyingTo": "Replying to",
      "postEdited": "edited",
      "postboxShare": "Share",
      "mentionsSearchLoading": "Loading...",
      "postboxConnectWallet": "Connect wallet to start sharing comment",
      "postboxConnectCeramic": "Generate a new Ceramic session to start sharing comment",
      "postboxConnectCeramicButton": "Generate Ceramic Session",
      "postboxEditCancel": "Cancel",
      "postboxEditSave": "Save",
      "removalMessage1": "Are you sure you want to remove this post?",
      "removalMessage2": "This uses your moderator powers and should only be done for inappropriate content.",
      "deletionMessage1": "Are you sure you want to delete this post?",
      "deletionMessage2": "If you ask for deletion your post might be removed from the Ceramic nodes hosting it.",
      "reload": "Reload"
    }
  },
  "inputValidation": {
    "recipientAddressIsRequired": "Recipient address is required",
    "amountIsRequired": "Amount is required",
    "invalidRecipientAddress": "Invalid recipient address",
    "tokenIsRequired": "Token is required",
    "amountCannotBeZero": "Amount cannot be zero",
    "invalidAmount": "Invalid amount",
    "invalidValue": "Invalid value",
    "invalidTokenAddress": "Invalid token address",
    "dataIsNotAHexString": "Data is not a hex string",
    "dataIsRequired": "Data is required",
    "eitherDataOrValueRequired": "Either data or value is required",
    "dataIsOddLength": "Data is of odd length",
    "reputationPercentageTooHigh": "Reputation percentage too high",
    "reputationPercentIsRequired": "Reputation percentage is required",
    "invalidFunctionName": "Invalid function name",
    "encodedSignatureIsInvalid": "Encoded signature is invalid",
    "invalidAddress": "Invalid address",
    "addressIsRequired": "Address is required",
    "cantBeGreaterThan100": "Can't be greater than 100%"
  },
  "daoErrors": {
    "noDAOsRegistered": "No DAOs registered on this network",
    "daoNotAvailable": "DAO not available",
    "daoNotAvailableOnThisNetwork": "This guild is not available on this network",
    "noDAOInThisAddress": "No guild exists on this address",
    "unknownDAO": "Unknown DAO",
    "errorLoadingDAOsList": "Error while loading DAOs list"
  },
  "404": {
    "pageNotExist": "That page doesn't exist",
    "makeSureCorrectAddress": "Make sure you typed the correct address",
    "takeMeHome": "Take me home"
  },
  "footer": {
    "reportABug": "Report a bug",
    "suggestAFeature": "Suggest a feature"
  },
  "offlinePage": {
    "youAreNotOnline": "You are not Online",
    "pleaseCheckYourInternetConnection": "Please check your internet connection"
  },
  "loadingDao": "Loading DAO",
  "votes": "Votes",
  "hookStoreErrors": {
    "methodNotSupported": "This method isn't supported in this governance implementation"
  },
  "loading": "Loading...",
  "showMore": "Show More",
  "showLess": "Show Less"
}
